1: Admin Module
2: Recommendation Engine (using collabrating filtering upon user prefrerences by using TensorFlow.JS)
3: Chat Engine between user and seller
4: Search Engine

This system will have a search engine which recommend a result based on its content. It means that it performs a search based on specific features of the system e.g. location, distance, price, typeâ€¦ etc. The proposed system will include a model which script and take off the data from the websites and use it as a recommender result to the user.

1: user profile (manage user)
2: chat system


Changes detail:
for userProfile:
1: edit rules in the firestore Storage
2: update the profile for phoneNo and profile image by updating user which is called from redux(userSelector).


Comments for 60%: 
1. Revise use case 
2. improper formatting 
3. minor changes in diagrams. 
4. minor changes in UI 
5. improper user profile 
6. UI incomplete 
7. incomplete work Tasks 
for 100%: 
1. complete recommendation system 
2. implementing full scope and functionalities

const searchBtn = (userInput) => {
    // Perform the search and set the search results
    const url = `http://192.168.18.46:5000/search_by_city?city=${userInput}`;

    fetch(url)
      .then((response) => {
        if (response.ok) {
          return response.json();
        } else {
          throw new Error("Error: Unable to fetch search results");
        }
      })
      .then((data) => {
        // Process the received data
        console.log(data);
        setSearchResults(data); // Set the search results
      })
      .catch((error) => {
        // Handle any errors
        console.error(error);
      });
  };

  rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    match /{allPaths=**} {
      allow write: if request.auth != null;
      allow read;
    }
  }
}

firestore database rules:
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if
          request.time < timestamp.date(2025, 4, 21);
    }
  }
}